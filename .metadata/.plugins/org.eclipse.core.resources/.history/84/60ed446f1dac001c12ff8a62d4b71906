package org.formation.controller;

import java.util.List;

import org.formation.model.Document;
import org.formation.model.DocumentRepository;
import org.formation.model.Member;
import org.formation.model.MemberRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/documents")
public class DocumentRestController {
	
	@Autowired
	private MemberRepository memberRepository; 
	@Autowired
	private DocumentRepository documentRepository; 
	
	//Récupérer tous les documents d’un membre donné
	@GetMapping("/{id}")
	public List<Document> findDocumentsByMember(@PathVariable Long id) throws MemberNotFoundExeption {
		memberRepository.findById(id).orElseThrow(() -> new MemberNotFoundExeption());
		return documentRepository.findDocumentsByMemberId(id); 
	}

	// ajouter un document à un membre
	@PostMapping("/{id}")
	public ResponseEntity<Void> addDocumentToMember(@RequestBody Document document, @PathVariable Long id) throws MemberNotFoundExeption {
		Member member = memberRepository.findById(id).orElseThrow(() -> new MemberNotFoundExeption());
		member.addDocument(document);
		memberRepository.save(member); 
		return new ResponseEntity<>(HttpStatus.NO_CONTENT); 
	}

}
