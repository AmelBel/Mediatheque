package org.project.controller;

import java.util.List;

import org.project.model.CD;
import org.project.model.DVD;
import org.project.model.Document;
import org.project.model.DocumentRepository;
import org.project.model.Livre;
import org.project.model.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/mediatheque/catalogue")
public class DocumentRestController {
	
	@Autowired
	private DocumentRepository documentRepository; 
	
	@Autowired
	private UserRepository userRepository; 
	
	@GetMapping
	public List<Document> findAllDocument () {
		return documentRepository.findAll(); 
		
	}
	
	@GetMapping("/CD")
	public List<Document> findAllCD () {
		if ( documentRepository instanceof CD)
			return documentRepository.findAll();
		return null; 	
	}
	
	@GetMapping("/Livre")
	public List<Document> findAllLivre () {
		if ( documentRepository instanceof Livre)
			return documentRepository.findAll();
		return null; 	
	}
	
	@GetMapping("/DVD")
	public List<Document> findAllDvd () {
		if ( documentRepository instanceof DVD)
			return documentRepository.findAll();
		return null; 	
	}
	
	
	//afficher les documents dont le titre contenant une chaîne particulière
	// pour voir sur le web on test sur l navigateur : http://localhost:8080/mediatheque/catalogue/search?q=ga, ga c'est la chaine recherché!
		@GetMapping("/search")
		public List<Document>  searchDocumentByString(@RequestParam String q) {
			
			return documentRepository.findBytitreContainingIgnoreCase(q); 
		}
		

	
	

}
